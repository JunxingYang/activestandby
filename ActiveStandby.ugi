process Side1 graphinfo {
location entry (-1976,-472);
locationName entry(-10,-30);
location side2Active (-1120,-320);
locationName side2Active(-16,-32);
location side1Active (-1360,-320);
locationName side1Active(-32,-32);
location side1Wait (-1472,-320);
locationName side1Wait(-48,-32);
location side2Running (-1600,-320);
locationName side2Running(-96,-16);
location side2Failed (-1600,-176);
locationName side2Failed(-96,-16);
location side1Running (-1744,-368);
locationName side1Running(-112,0);
location side1Failed (-1744,-544);
locationName side1Failed(-16,-32);
location initial (-1888,-480);
locationName initial(-32,-32);
sync entry initial 1 (-60,-15);
assign entry initial 1 (-60,0);
trans side2Active side2Active 1 (16,0);
trans side2Active side2Active 1 (32,-16);
sync side2Active side2Active 1 (-64,-16);
assign side2Active side2Active 1 (-64,0);
trans side2Active side2Active 2 (0,32);
trans side2Active side2Active 2 (16,16);
sync side2Active side2Active 2 (-64,-16);
assign side2Active side2Active 2 (-64,0);
trans side1Active side1Active 1 (16,32);
trans side1Active side1Active 1 (32,16);
sync side1Active side1Active 1 (-64,-16);
assign side1Active side1Active 1 (-64,0);
trans side1Active side1Active 2 (-16,32);
trans side1Active side1Active 2 (0,32);
sync side1Active side1Active 2 (-64,-16);
assign side1Active side1Active 2 (-64,0);
trans side2Failed side2Failed 1 (-16,64);
trans side2Failed side2Failed 1 (16,64);
sync side2Failed side2Failed 1 (-64,-16);
assign side2Failed side2Failed 1 (-64,0);
trans side2Failed side2Failed 2 (-48,32);
trans side2Failed side2Failed 2 (-16,32);
sync side2Failed side2Failed 2 (-64,-16);
assign side2Failed side2Failed 2 (-64,0);
trans side1Failed side1Failed 1 (16,-48);
trans side1Failed side1Failed 1 (32,-16);
sync side1Failed side1Failed 1 (-16,-64);
assign side1Failed side1Failed 1 (-16,-48);
trans side1Failed side1Failed 2 (-16,-48);
trans side1Failed side1Failed 2 (-16,0);
sync side1Failed side1Failed 2 (-64,-16);
assign side1Failed side1Failed 2 (-64,0);
trans side2Active side2Failed 1 (112,80);
guard side2Active side2Failed 1 (16,24);
sync side2Active side2Failed 1 (-64,-24);
assign side2Active side2Failed 1 (16,40);
trans side1Active side2Failed 1 (-40,72);
guard side1Active side2Failed 1 (-24,40);
sync side1Active side2Failed 1 (-56,-24);
assign side1Active side2Failed 1 (-8,56);
trans side1Wait side2Failed 1 (-16,72);
guard side1Wait side2Failed 1 (-80,72);
sync side1Wait side2Failed 1 (-64,-24);
assign side1Wait side2Failed 1 (-48,96);
trans side2Active side1Failed 1 (-8,-128);
guard side2Active side1Failed 1 (56,-64);
sync side2Active side1Failed 1 (-56,-16);
assign side2Active side1Failed 1 (56,-48);
trans side1Active side1Failed 1 (96,-112);
guard side1Active side1Failed 1 (112,-112);
sync side1Active side1Failed 1 (-64,-16);
assign side1Active side1Failed 1 (112,-96);
trans side1Wait side1Failed 1 (136,-112);
guard side1Wait side1Failed 1 (136,-160);
sync side1Wait side1Failed 1 (-56,-16);
assign side1Wait side1Failed 1 (152,-144);
trans side2Running side1Failed 1 (168,-96);
guard side2Running side1Failed 1 (8,-96);
sync side2Running side1Failed 1 (-56,-16);
assign side2Running side1Failed 1 (40,-80);
trans side2Failed side1Failed 1 (184,-168);
guard side2Failed side1Failed 1 (40,-232);
sync side2Failed side1Failed 1 (40,-200);
assign side2Failed side1Failed 1 (56,-216);
trans side2Active side1Active 1 (-8,48);
guard side2Active side1Active 1 (-152,48);
sync side2Active side1Active 1 (-72,-16);
assign side2Active side1Active 1 (-24,64);
guard side2Active side1Active 2 (-104,-16);
sync side2Active side1Active 2 (-72,-16);
assign side2Active side1Active 2 (-72,0);
trans side1Active side2Active 1 (-24,-64);
guard side1Active side2Active 1 (-104,-80);
sync side1Active side2Active 1 (-72,-16);
assign side1Active side2Active 1 (-72,-64);
sync side1Wait side1Active 1 (-56,-24);
assign side1Wait side1Active 1 (-56,0);
assign side2Running side1Wait 1 (-64,0);
trans side2Running side2Failed 1 (-16,-8);
guard side2Running side2Failed 1 (-128,-24);
sync side2Running side2Failed 1 (-64,-24);
assign side2Running side2Failed 1 (-128,-8);
guard side2Failed side2Running 1 (16,-8);
assign side2Failed side2Running 1 (-60,0);
guard side1Running side2Running 1 (-48,-32);
trans side1Running side2Failed 1 (-72,64);
guard side1Running side2Failed 1 (-216,-32);
sync side1Running side2Failed 1 (-56,-16);
assign side1Running side2Failed 1 (-192,-16);
trans side1Running side1Failed 1 (80,8);
guard side1Running side1Failed 1 (64,-24);
sync side1Running side1Failed 1 (-64,-24);
assign side1Running side1Failed 1 (80,-8);
guard side1Failed side1Running 1 (-80,-24);
assign side1Failed side1Running 1 (-60,0);
guard initial side1Running 1 (-104,24);
guard initial side1Failed 1 (-144,-40);
sync initial side1Failed 1 (-80,-24);
assign initial side1Failed 1 (-128,-16);
}
process Side2 graphinfo {
location entry (-1968,-464);
locationName entry(-10,-30);
location side2Active (-1120,-320);
locationName side2Active(-16,-32);
location side1Active (-1360,-320);
locationName side1Active(-32,-32);
location side2Wait (-1472,-320);
locationName side2Wait(-48,-32);
location side1Running (-1600,-320);
locationName side1Running(-96,-16);
location side1Failed (-1600,-176);
locationName side1Failed(-80,-32);
location side2Running (-1744,-368);
locationName side2Running(-112,0);
location side2Failed (-1744,-544);
locationName side2Failed(32,-32);
location initial (-1888,-480);
locationName initial(-32,-32);
sync entry initial 1 (-60,-15);
assign entry initial 1 (-40,24);
trans side2Active side2Active 1 (32,16);
trans side2Active side2Active 1 (32,0);
sync side2Active side2Active 1 (-64,-16);
assign side2Active side2Active 1 (-64,0);
trans side2Active side2Active 2 (-16,32);
trans side2Active side2Active 2 (0,32);
sync side2Active side2Active 2 (-16,32);
assign side2Active side2Active 2 (-32,48);
trans side1Active side1Active 1 (0,32);
trans side1Active side1Active 1 (16,16);
sync side1Active side1Active 1 (-64,-16);
assign side1Active side1Active 1 (-64,0);
trans side1Active side1Active 2 (-16,32);
trans side1Active side1Active 2 (0,32);
sync side1Active side1Active 2 (-64,16);
assign side1Active side1Active 2 (-112,32);
trans side1Failed side1Failed 1 (-16,32);
trans side1Failed side1Failed 1 (16,16);
sync side1Failed side1Failed 1 (-64,-16);
assign side1Failed side1Failed 1 (-64,0);
trans side1Failed side1Failed 2 (-32,0);
trans side1Failed side1Failed 2 (-32,16);
sync side1Failed side1Failed 2 (-48,0);
assign side1Failed side1Failed 2 (-128,16);
trans side2Failed side2Failed 1 (16,-32);
trans side2Failed side2Failed 1 (32,-16);
sync side2Failed side2Failed 1 (-64,-16);
assign side2Failed side2Failed 1 (-64,0);
trans side2Failed side2Failed 2 (-32,-32);
trans side2Failed side2Failed 2 (-32,0);
sync side2Failed side2Failed 2 (-48,-32);
assign side2Failed side2Failed 2 (-128,-16);
trans side2Active side1Active 1 (-8,32);
guard side2Active side1Active 1 (-72,32);
sync side2Active side1Active 1 (-72,-16);
assign side2Active side1Active 1 (-56,48);
guard side1Active side2Active 1 (-88,-16);
sync side1Active side2Active 1 (-72,-16);
assign side1Active side2Active 1 (-56,0);
trans side1Active side2Active 2 (-8,-80);
guard side1Active side2Active 2 (-152,-112);
sync side1Active side2Active 2 (-72,-16);
assign side1Active side2Active 2 (-56,-80);
trans side2Active side1Failed 1 (-144,88);
guard side2Active side1Failed 1 (16,24);
sync side2Active side1Failed 1 (-64,-24);
assign side2Active side1Failed 1 (16,40);
trans side1Active side1Failed 1 (-40,72);
guard side1Active side1Failed 1 (-24,40);
sync side1Active side1Failed 1 (-56,-24);
assign side1Active side1Failed 1 (-8,56);
trans side2Wait side1Failed 1 (-16,72);
guard side2Wait side1Failed 1 (-32,72);
sync side2Wait side1Failed 1 (-64,-24);
assign side2Wait side1Failed 1 (-16,88);
trans side2Active side2Failed 1 (-8,-128);
guard side2Active side2Failed 1 (56,-64);
sync side2Active side2Failed 1 (-56,-16);
assign side2Active side2Failed 1 (56,-48);
trans side1Active side2Failed 1 (96,-112);
guard side1Active side2Failed 1 (112,-112);
sync side1Active side2Failed 1 (-64,-16);
assign side1Active side2Failed 1 (112,-96);
trans side2Wait side2Failed 1 (136,-112);
guard side2Wait side2Failed 1 (136,-160);
sync side2Wait side2Failed 1 (-56,-16);
assign side2Wait side2Failed 1 (152,-144);
trans side1Running side2Failed 1 (168,-96);
guard side1Running side2Failed 1 (8,-96);
sync side1Running side2Failed 1 (-56,-16);
assign side1Running side2Failed 1 (40,-80);
trans side1Failed side2Failed 1 (184,-168);
guard side1Failed side2Failed 1 (40,-232);
sync side1Failed side2Failed 1 (-56,-24);
assign side1Failed side2Failed 1 (56,-216);
sync side2Wait side1Active 1 (-56,-24);
assign side2Wait side1Active 1 (-56,16);
assign side1Running side2Wait 1 (-56,-16);
trans side1Running side1Failed 1 (-16,-8);
guard side1Running side1Failed 1 (-128,-24);
sync side1Running side1Failed 1 (-64,-24);
assign side1Running side1Failed 1 (-128,-8);
guard side1Failed side1Running 1 (16,-8);
assign side1Failed side1Running 1 (-60,0);
guard side2Running side1Running 1 (-40,-40);
trans side2Running side1Failed 1 (-72,64);
guard side2Running side1Failed 1 (-216,-32);
sync side2Running side1Failed 1 (-56,-16);
assign side2Running side1Failed 1 (-240,-16);
trans side2Running side2Failed 1 (80,8);
guard side2Running side2Failed 1 (64,-24);
sync side2Running side2Failed 1 (-64,-24);
assign side2Running side2Failed 1 (80,-8);
guard side2Failed side2Running 1 (-80,-24);
assign side2Failed side2Running 1 (-60,0);
guard initial side2Running 1 (-136,8);
guard initial side2Failed 1 (-104,-32);
sync initial side2Failed 1 (-56,-16);
assign initial side2Failed 1 (-104,-16);
}
process Channel graphinfo {
location Recv (-648,-48);
locationName Recv(-10,-30);
invariant Recv(-10,15);
location Idle (-752,-48);
locationName Idle(-32,8);
trans Recv Idle 1 (4,48);
guard Recv Idle 1 (-60,64);
sync Recv Idle 1 (-36,48);
trans Idle Recv 1 (-4,-40);
sync Idle Recv 1 (-36,-72);
assign Idle Recv 1 (-20,-56);
}
process Input graphinfo {
location S0 (-296,-64);
locationName S0(-10,-30);
trans S0 S0 1 (0,48);
trans S0 S0 1 (24,48);
select S0 S0 1 (-368,-16);
sync S0 S0 1 (-104,8);
assign S0 S0 1 (-168,32);
}
